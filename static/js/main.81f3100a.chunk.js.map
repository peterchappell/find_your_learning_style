{"version":3,"sources":["components/Introduction/index.js","data/questions.js","components/Questions/index.js","components/ResultsItemScoreChart/index.js","components/ResultsItemDetails/index.js","components/ResultsItem/index.js","data/learningTypes.js","components/Results/index.js","components/AppMain/index.js","components/App/index.js","serviceWorker.js","index.js"],"names":["useStyles","makeStyles","theme","button","margin","spacing","Introduction","props","startHandler","classes","Typography","variant","component","Button","color","size","endIcon","onClick","className","Questions","currentQuestion","saveAnswer","goBack","previousQuestionNumber","useRef","useState","doFadeIn","setDoFadeIn","answer","setAnswer","useEffect","current","setTimeout","Fade","in","onExited","Card","CardContent","gutterBottom","Tooltip","title","aria-label","placement","TransitionComponent","IconButton","questions","length","CardActions","startIcon","chart","backgroundColor","palette","grey","height","position","categoryMarker","borderRight","background","paper","bottom","left","top","zIndex","scoreBar","withTheme","learningType","score","scoreCategories","map","scoreCategory","scoreCategoryIndex","key","name","width","bgColor","lighten","primary","main","maxScore","questionIndexes","style","minScore","renderScoreBarForCategory","headerIcon","flexGrow","flexShrink","headerContent","display","divider","responses","marginTop","attributesContainer","attributesList","paddingLeft","ResultsItemDetails","isOpen","closeHandler","scoreData","scoreLevel","useTheme","fullScreen","useMediaQuery","breakpoints","down","Dialog","open","scroll","aria-labelledby","learningTypeKey","DialogTitle","id","DialogContent","dividers","DialogContentText","description","learnBestWhen","attribute","index","learnLeastWhen","Divider","questionIndex","Grid","container","item","xs","DialogActions","autoFocus","learningTypeCard","results","ResultsItem","isDetailsOpen","setIsDetailsOpen","setScoreLevel","find","category","activist","reflector","theorist","pragmatist","Results","answers","scoresByLearningType","setScoresByLearningType","categorisedScores","Object","keys","learningTypes","forEach","scoreForThisLearningType","answerForCurrentIndex","push","learningTypeScore","totalNumberOfQuestions","mainContainer","marginBottom","AppMain","stage","setStage","currentQuestionNumber","setCurrentQuestionNumber","Container","maxWidth","questionNumber","String","footerContainer","textAlign","App","AppBar","Toolbar","Link","href","target","rel","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"yUAWMA,EAAYC,aAAW,SAACC,GAAD,MAAY,CACvCC,OAAQ,CACNC,OAAQ,CAAC,CAACF,EAAMG,QAAQ,GAAI,EAAG,EAAG,SA+BvBC,EA3BM,SAACC,GAAkB,IAC9BC,EAAiBD,EAAjBC,aACFC,EAAUT,IAEhB,OACE,oCACE,kBAACU,EAAA,EAAD,CAAYC,QAAQ,QAAQC,UAAU,OACpC,+IAEA,8OAIF,kBAACC,EAAA,EAAD,CACEF,QAAQ,YACRG,MAAM,UACNC,KAAK,QACLC,QAAS,kBAAC,IAAD,MACTC,QAAST,EACTU,UAAWT,EAAQN,QANrB,uB,yGC9BS,GACf,oEACA,4DACA,yDACA,gEACA,mEACA,0GACA,wFACA,4DACA,2DACA,sCACA,uGACA,oHACA,uCACA,6FACA,+FACA,2EACA,oEACA,oFACA,+HACA,qDACA,qDACA,0EACA,oEACA,yCACA,qEACA,kDACA,+CACA,sDACA,yGACA,6EACA,0EACA,0CACA,6EACA,wGACA,6HACA,+EACA,2DACA,uDACA,0DACA,0FACA,uHACA,+BACA,6DACA,sDACA,oDACA,0CACA,6EACA,uCACA,iEACA,2DACA,+DACA,0FACA,4EACA,oEACA,oGACA,8DACA,oDACA,yCACA,2GACA,8DACA,oFACA,4GACA,8EACA,kFACA,gEACA,oDACA,wDACA,iFACA,mDACA,sEACA,wEACA,2DACA,iDACA,qDACA,uGACA,sDACA,oFACA,kDACA,yDACA,sDCzDMH,EAAYC,aAAW,SAACC,GAAD,MAAY,CACvCC,OAAQ,CACNC,OAAQ,CAAC,CAACF,EAAMG,QAAQ,GAAIH,EAAMG,QAAQ,GAAI,EAAG,SAuFtCc,EAnFG,SAACZ,GAAkB,IAEjCa,EAGEb,EAHFa,gBACAC,EAEEd,EAFFc,WACAC,EACEf,EADFe,OAEIb,EAAUT,IACVuB,EAAyBC,mBAPG,EAQFC,oBAAS,GARP,mBAQ3BC,EAR2B,KAQjBC,EARiB,OASNF,qBATM,mBAS3BG,EAT2B,KASnBC,EATmB,KAkClC,OATAC,qBAAU,WACJV,IAAoBG,EAAuBQ,UAC7CR,EAAuBQ,QAAUX,EACjCY,YAAW,WACTL,GAAY,KACX,QAEJ,CAACP,IAGF,kBAACa,EAAA,EAAD,CAAMC,GAAIR,EAAUS,SAxBY,WAChCd,EAAWD,EAAiBQ,KAwB1B,kBAACQ,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,KACE,kBAAC3B,EAAA,EAAD,CAAYC,QAAQ,YAAYC,UAAU,KAAKE,MAAM,gBAAgBwB,cAAY,GAC/E,kBAACC,EAAA,EAAD,CACEC,MAAOpB,EAAe,8BAA0BA,GAAoB,UACpEqB,aAAW,qBACXC,UAAU,MACVC,oBAAqBV,KAErB,kBAACW,EAAA,EAAD,CACE7B,KAAK,QACLE,QAASK,GAET,kBAAC,IAAD,QAXN,YAcYF,EAAkB,EAd9B,OAcqCyB,EAAUC,QAE/C,kBAACpC,EAAA,EAAD,CAAYC,QAAQ,KAAKC,UAAU,KAChCiC,EAAUzB,KAGf,kBAAC2B,EAAA,EAAD,KACE,kBAAClC,EAAA,EAAD,CACEC,MAAM,UACNC,KAAK,QACLiC,UAAW,kBAAC,IAAD,MACX/B,QAhDU,WAClBY,GAAU,GACVF,GAAY,IA+CJT,UAAWT,EAAQN,QALrB,gBASA,kBAACU,EAAA,EAAD,CACEC,MAAM,UACNC,KAAK,QACLiC,UAAW,kBAAC,IAAD,MACX/B,QApDa,WACrBY,GAAU,GACVF,GAAY,IAmDJT,UAAWT,EAAQN,QALrB,uB,gBCrFJH,EAAYC,aAAW,SAACC,GAAD,MAAY,CACvC+C,MAAO,CACLC,gBAAiBhD,EAAMiD,QAAQC,KAAK,KACpChD,OAAQ,CAAC,CAACF,EAAMG,QAAQ,GAAI,IAC5BgD,OAAQ,OACRC,SAAU,YAEZC,eAAgB,CACdC,YAAY,aAAD,OAAetD,EAAMiD,QAAQM,WAAWC,OACnDC,OAAQ,EACRC,KAAM,EACNN,SAAU,WACVO,IAAK,EACLC,OAAQ,IAEVC,SAAU,CACRT,SAAU,WACVM,KAAM,EACNP,OAAQ,OACRQ,IAAK,SA6DMG,eAzDgB,SAACzD,GAAkB,IAE9C0D,EAGE1D,EAHF0D,aACAC,EAEE3D,EAFF2D,MACAhE,EACEK,EADFL,MAEIO,EAAUT,IA2BhB,OACE,yBAAKkB,UAAWT,EAAQwC,OACpBgB,EAAaE,gBAAgBC,KAAI,SAACC,EAAeC,GACjD,IAAMR,EAAS,GAAKQ,EACpB,OACE,yBAAKC,IAAG,UAAKN,EAAazB,MAAlB,YAA2B6B,EAAcG,KAAzC,SA9BkB,SAACH,EAAeC,GAChD,IAAIG,EACEC,EAAUC,YAAQzE,EAAMiD,QAAQyB,QAAQC,MAAO,GAAKZ,EAAaE,gBAAgBrB,OAAS,EAAIwB,GAAoB,IAClHR,EAAS,GAAKQ,EACpB,OAAIJ,EAAQG,EAAcS,UACxBL,EAASJ,EAAcS,SAAUb,EAAac,gBAAgBjC,OAAS,IAErE,yBACE5B,UAAWT,EAAQsD,SACnBiB,MAAO,CAAEP,MAAM,GAAD,OAAKA,EAAL,KAAevB,gBAAgB,GAAD,OAAKwB,GAAWZ,aAI9DI,GAASG,EAAcY,UACzBR,EAAQP,EAAMD,EAAac,gBAAgBjC,OAAS,IAElD,yBACE5B,UAAWT,EAAQsD,SACnBiB,MAAO,CAAEP,MAAM,GAAD,OAAKA,EAAL,KAAevB,gBAAgB,GAAD,OAAKwB,GAAWZ,aAI3D,KASGoB,CAA0Bb,EAAeC,GAC3C,kBAAC/B,EAAA,EAAD,CACEC,MAAK,UAAK6B,EAAcG,KAAnB,aAA4BH,EAAcY,SAA1C,eAAyDZ,EAAcS,UAC5EpC,UAAU,UACVC,oBAAqBV,KAErB,yBACEf,UAAWT,EAAQ8C,eACnByB,MAAO,CAAEP,MAAM,GAAD,OAAMJ,EAAcS,SAAUb,EAAac,gBAAgBjC,OAAS,IAApE,KAA4EgB,qB,iGCtDpG9D,EAAYC,aAAW,SAACC,GAAD,MAAY,CACvCiF,WAAY,CACVC,SAAU,EACVC,WAAY,EACZhC,OAAQ,OACRjD,OAAQ,CAAC,CAAC,EAAGF,EAAMG,QAAQ,GAAI,EAAG,IAClCoE,MAAO,QAETa,cAAe,CACbC,QAAS,QAEXC,QAAS,CACPpF,OAAQ,CAAC,CAACF,EAAMG,QAAQ,GAAI,KAE9BoF,UAAW,CACTC,UAAWxF,EAAMG,QAAQ,IAE3BsF,oBAAqB,CACnBvF,OAAQ,CAAC,CAACF,EAAMG,QAAQ,GAAI,KAE9BuF,eAAgB,CACdxF,OAAQ,CAAC,CAACF,EAAMG,QAAQ,GAAI,IAC5BwF,YAAa3F,EAAMG,QAAQ,QAwGhByF,EApGY,SAACvF,GAAkB,IAE1CwF,EAKExF,EALFwF,OACAC,EAIEzF,EAJFyF,aACA/B,EAGE1D,EAHF0D,aACAgC,EAEE1F,EAFF0F,UACAC,EACE3F,EADF2F,WAEIzF,EAAUT,IAEVE,EAAQiG,cACRC,EAAaC,YAAcnG,EAAMoG,YAAYC,KAAK,OAExD,OACE,kBAACC,EAAA,EAAD,CACEJ,WAAYA,EACZK,KAAMV,EACNW,OAAO,QACPC,kBAAA,uBAAiCV,EAAUW,kBAE3C,kBAACC,EAAA,EAAD,CAAaC,GAAE,uBAAkBb,EAAUW,kBACzC,yBAAK1F,UAAWT,EAAQ6E,eACtB,yBAAKpE,UAAWT,EAAQ0E,YACtB,kBAACvC,EAAA,EAAD,CACEH,aAAW,qBACX1B,KAAK,QACLE,QAAS+E,GAET,kBAAC,IAAD,QAGH/B,EAAazB,QAGlB,kBAACuE,EAAA,EAAD,CAAeC,UAAQ,GACrB,kBAACC,EAAA,EAAD,CAAmBrG,UAAU,OAC3B,kBAACF,EAAA,EAAD,CAAYC,QAAQ,QAAQC,UAAU,KACnCqD,EAAaiD,aAEhB,yBAAKhG,UAAWT,EAAQkF,qBACtB,kBAACjF,EAAA,EAAD,CAAYC,QAAQ,QAAQC,UAAU,MACpC,gCAASqD,EAAazB,MAAtB,uBAEF,wBAAItB,UAAWT,EAAQmF,gBACpB3B,EAAakD,cAAc/C,KAAI,SAACgD,EAAWC,GAC1C,IAAM9C,EAAG,UAAMN,EAAazB,MAAnB,uBAAuC6E,GAChD,OACE,kBAAC3G,EAAA,EAAD,CAAYC,QAAQ,QAAQC,UAAU,KAAK2D,IAAKA,GAC7C6C,QAMX,yBAAKlG,UAAWT,EAAQkF,qBACtB,kBAACjF,EAAA,EAAD,CAAYC,QAAQ,QAAQC,UAAU,MACpC,gCAASqD,EAAazB,MAAtB,wBAEF,wBAAItB,UAAWT,EAAQmF,gBACpB3B,EAAaqD,eAAelD,KAAI,SAACgD,EAAWC,GAC3C,IAAM9C,EAAG,UAAMN,EAAazB,MAAnB,wBAAwC6E,GACjD,OACE,kBAAC3G,EAAA,EAAD,CAAYC,QAAQ,QAAQC,UAAU,KAAK2D,IAAKA,GAC7C6C,QAMX,kBAACG,EAAA,EAAD,CAASrG,UAAWT,EAAQ+E,UAC5B,kBAAC9E,EAAA,EAAD,CAAYC,QAAQ,YAAYC,UAAU,KAA1C,mBACmBqF,EAAU/B,MAD7B,2CAC4ED,EAAazB,MADzF,4CACwI,gCAASyB,EAAazB,OAD9J,sBACgM,gCAAS0D,GADzM,8CAGA,kBAACqB,EAAA,EAAD,CAASrG,UAAWT,EAAQ+E,UAC5B,kBAAC9E,EAAA,EAAD,CAAYC,QAAQ,YAAYC,UAAU,KACxC,oEAA0CqD,EAAazB,MAAvD,iBAEF,yBAAKtB,UAAWT,EAAQgF,WACrBxB,EAAac,gBAAgBX,KAAI,SAACoD,GAAD,OAChC,kBAACC,EAAA,EAAD,CAAMC,WAAS,EAACrH,QAAS,EAAGkE,IAAG,UAAKN,EAAazB,MAAlB,qBAAoCgF,IACjE,kBAACC,EAAA,EAAD,CAAME,MAAI,EAACC,GAAI,IACZ/E,EAAU2E,IAEb,kBAACC,EAAA,EAAD,CAAME,MAAI,EAACC,GAAI,GACX3B,EAAUR,UAAU+B,GAAiB,kBAAC,IAAD,MAAgB,kBAAC,IAAD,cAOnE,kBAACK,EAAA,EAAD,KACE,kBAAChH,EAAA,EAAD,CAAQI,QAAS+E,EAAclF,MAAM,UAAUgH,WAAS,GAAxD,YCjIF9H,EAAYC,aAAW,SAACC,GAAD,MAAY,CACvC6H,iBAAkB,CAChB3H,OAAQ,CAAC,CAACF,EAAMG,QAAQ,GAAI,KAE9B2H,QAAS,CACP5H,OAAQ,CAAC,CAACF,EAAMG,QAAQ,GAAI,EAAG,SAwEpB4H,EApEK,SAAC1H,GAAkB,IAEnC0D,EAEE1D,EAFF0D,aACAgC,EACE1F,EADF0F,UAGIxF,EAAUT,IANoB,EAQMyB,oBAAS,GARf,mBAQ7ByG,EAR6B,KAQdC,EARc,OASA1G,mBAAS,IATT,mBAS7ByE,EAT6B,KASjBkC,EATiB,KA2BpC,OARAtG,qBAAU,WACR,IAAIuC,EAAgBJ,EAAaE,gBAAgBkE,MAAK,SAAAC,GAAQ,OAAIrC,EAAU/B,OAASoE,EAASrD,UAAYgB,EAAU/B,OAASoE,EAASxD,YACjIT,IACFA,EADiB,YACAJ,EAAaE,gBADb,OAGpBiE,EAAc/D,EAAcG,QAC3B,CAACyB,EAAWhC,IAGb,kBAAC7B,EAAA,EAAD,CAAMlB,UAAWT,EAAQsH,kBACvB,kBAAC1F,EAAA,EAAD,KACE,kBAAC3B,EAAA,EAAD,CAAYC,QAAQ,KAAKC,UAAU,KAAK0B,cAAY,GACjD2B,EAAazB,OAEhB,kBAAC9B,EAAA,EAAD,CAAYC,QAAQ,QAAQC,UAAU,IAAI0B,cAAY,GACnD2B,EAAaiD,aAEhB,yBAAKhG,UAAWT,EAAQuH,SACtB,kBAAC,EAAD,CACE/D,aAAcA,EACdC,MAAO+B,EAAU/B,QAEnB,kBAACxD,EAAA,EAAD,CAAYC,QAAQ,QAAQC,UAAU,KACpC,gCAASsF,GADX,QAGID,EAAU/B,MAHd,IAGsBD,EAAac,gBAAgBjC,OAHnD,OAOJ,kBAACC,EAAA,EAAD,KACE,kBAAClC,EAAA,EAAD,CACEC,MAAM,UACNC,KAAK,QACLE,QAzCY,WAClBkH,GAAiB,KAqCb,YAQF,kBAAC,EAAD,CACEpC,OAAQmC,EACRlC,aA5Ce,WACnBmC,GAAiB,IA4CblC,UAAWA,EACXC,WAAYA,EACZjC,aAAcA,MCxFP,GACbsE,SAAU,CACR/F,MAAO,WACP0E,YAAa,iMAGbC,cAAe,CACb,0DACA,4BACA,wEACA,yBAEFG,eAAgB,CACd,qDACA,6CACA,0CACA,kCAEFvC,gBAAiB,CAAC,EAAG,EAAG,EAAG,EAAG,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,IAC1FZ,gBAAiB,CACf,CACEK,KAAM,WACNS,SAAU,EACVH,SAAU,GAEZ,CACEN,KAAM,MACNS,SAAU,EACVH,SAAU,GAEZ,CACEN,KAAM,WACNS,SAAU,EACVH,SAAU,IAEZ,CACEN,KAAM,SACNS,SAAU,GACVH,SAAU,IAEZ,CACEN,KAAM,cACNS,SAAU,GACVH,SAAU,MAIhB0D,UAAW,CACThG,MAAO,YACP0E,YAAa,6PAIbC,cAAe,CACb,uCACA,kEACA,mDACA,uCAEFG,eAAgB,CACd,mCACA,mCACA,uBAEFvC,gBAAiB,CAAC,EAAG,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,IAC7FZ,gBAAiB,CACf,CACEK,KAAM,WACNS,SAAU,EACVH,SAAU,GAEZ,CACEN,KAAM,MACNS,SAAU,EACVH,SAAU,IAEZ,CACEN,KAAM,WACNS,SAAU,GACVH,SAAU,IAEZ,CACEN,KAAM,SACNS,SAAU,GACVH,SAAU,IAEZ,CACEN,KAAM,cACNS,SAAU,GACVH,SAAU,MAIhB2D,SAAU,CACRjG,MAAO,WACP0E,YAAa,gNAGbC,cAAe,CACb,sFAEA,iDACA,6CACA,8CAEFG,eAAgB,CACd,qDACA,gDACA,yEAEFvC,gBAAiB,CAAC,EAAG,EAAG,EAAG,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,IAC3FZ,gBAAiB,CACf,CACEK,KAAM,WACNS,SAAU,EACVH,SAAU,GAEZ,CACEN,KAAM,MACNS,SAAU,EACVH,SAAU,IAEZ,CACEN,KAAM,WACNS,SAAU,GACVH,SAAU,IAEZ,CACEN,KAAM,SACNS,SAAU,GACVH,SAAU,IAEZ,CACEN,KAAM,cACNS,SAAU,GACVH,SAAU,MAIhB4D,WAAY,CACVlG,MAAO,aACP0E,YAAa,mPAGbC,cAAe,CACb,gEACA,4DACA,uDACA,qDAEFG,eAAgB,CACd,0CACA,gDACA,iCAEFvC,gBAAiB,CAAC,EAAG,EAAG,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,IAC5FZ,gBAAiB,CACf,CACEK,KAAM,WACNS,SAAU,EACVH,SAAU,GAEZ,CACEN,KAAM,MACNS,SAAU,EACVH,SAAU,IAEZ,CACEN,KAAM,WACNS,SAAU,GACVH,SAAU,IAEZ,CACEN,KAAM,SACNS,SAAU,GACVH,SAAU,IAEZ,CACEN,KAAM,cACNS,SAAU,GACVH,SAAU,OC7HH6D,GA5CC,SAACpI,GAAkB,IAE/BqI,EACErI,EADFqI,QAF8B,EAKwBnH,mBAAS,IALjC,mBAKzBoH,EALyB,KAKHC,EALG,KA4BhC,OArBAhH,qBAAU,WACR,IAAMiH,EAAoB,GAC1BC,OAAOC,KAAKC,GAAeC,SAAQ,SAAC5E,GAClC,IAAM6E,EAA2B,CAC/BxC,gBAAiBrC,EACjBkB,UAAW,GACXvB,MAAO,GAETgF,EAAc3E,GAAKQ,gBAAgBoE,SAAQ,SAAC3B,GAC1C,IAAM6B,EAAwBT,EAAQpB,GACtC4B,EAAyB3D,UAAU+B,GAAiB6B,EAChDA,IACFD,EAAyBlF,OAAS,MAGtC6E,EAAkBO,KAAKF,MAGzBN,EAAwBC,KACvB,CAACH,IAGF,oCACE,kBAAClI,EAAA,EAAD,CAAYC,QAAQ,YAAYC,UAAU,KAAK0B,cAAY,GAA3D,gCAGCuG,EAAqBzE,KAAI,SAACmF,GAAD,OACxB,kBAAC,EAAD,CACEhF,IAAKgF,EAAkB3C,gBACvB3C,aAAciF,EAAcK,EAAkB3C,iBAC9CX,UAAWsD,SCrCfC,GAAyB3G,EAAUC,OAEnC9C,GAAYC,aAAW,iBAAO,CAClCwJ,cAAe,CACbrE,SAAU,EACVsE,aAAc,OACdhE,UAAW,aAkDAiE,OA9Cf,WACE,IAAMlJ,EAAUT,KADC,EAESyB,mBAAS,SAFlB,mBAEVmI,EAFU,KAEHC,EAFG,OAGyCpI,mBAAS,GAHlD,mBAGVqI,EAHU,KAGaC,EAHb,KAIXnB,EAAUpH,iBAAO,IAuBvB,OACE,kBAACwI,EAAA,EAAD,CAAWC,SAAS,KAAKrJ,UAAU,OAAOM,UAAWT,EAAQgJ,eAC/C,UAAVG,GACA,kBAAC,EAAD,CAAcpJ,aAxBO,WACzBqJ,EAAS,gBAyBK,cAAVD,GACA,kBAAC,EAAD,CACEvI,WAxBW,SAAC6I,EAAgBtI,GAClCgH,EAAQ7G,QAAQoI,OAAOD,IAAmBtI,EACtCsI,EAAiB,EAAIV,GACvBO,EAAyBD,EAAwB,GAEjDD,EAAS,YAoBLzI,gBAAiB0I,EACjBxI,OAjBkB,WACpBwI,EACFC,EAAyBD,EAAuB,GAEhDD,EAAS,YAgBG,YAAVD,GACA,kBAAC,GAAD,CAAShB,QAASA,EAAQ7G,YCnD5B/B,GAAYC,aAAW,SAACC,GAAD,MAAY,CACvCkK,gBAAiB,CACf/E,WAAY,EACZjF,OAAQ,CAAC,CAACF,EAAMG,QAAQ,GAAIH,EAAMG,QAAQ,KAC1CgK,UAAW,cAiCAC,OA7Bf,WACE,IAAM7J,EAAUT,KAEhB,OACE,oCACE,kBAACuK,EAAA,EAAD,CAAQjH,SAAS,QAAQ1C,UAAU,UACjC,kBAAC4J,EAAA,EAAD,KACE,kBAAC9J,EAAA,EAAD,CAAYC,QAAQ,KAAKC,UAAU,MAAnC,8BAKJ,kBAAC,GAAD,MACA,kBAACF,EAAA,EAAD,CAAYC,QAAQ,QAAQC,UAAU,SAASM,UAAWT,EAAQ2J,iBAAlE,kBAEE,kBAACK,EAAA,EAAD,CAAMC,KAAK,qFAAqFC,OAAO,SAASC,IAAI,sBAAsBjK,QAAQ,SAAlJ,qDAFF,sDAOE,kBAAC8J,EAAA,EAAD,CAAMC,KAAK,+FAA+FC,OAAO,SAASC,IAAI,sBAAsBjK,QAAQ,SAA5J,uBAPF,2CCjBckK,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCdNC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,GAAD,OAEFC,SAASC,eAAe,SD2HpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBC,MAAK,SAAAC,GACJA,EAAaC,gBAEdC,OAAM,SAAAC,GACLC,QAAQD,MAAMA,EAAME,c","file":"static/js/main.81f3100a.chunk.js","sourcesContent":["import React from 'react';\n\nimport {makeStyles} from \"@material-ui/core/styles\";\nimport ArrowForwardIosIcon from '@material-ui/icons/ArrowForwardIos';\nimport Button from '@material-ui/core/Button';\nimport Typography from '@material-ui/core/Typography';\n\ntype Props = {\n  startHandler: Function,\n};\n\nconst useStyles = makeStyles((theme) => ({\n  button: {\n    margin: [[theme.spacing(2), 0, 0, 0]],\n  },\n}));\n\nconst Introduction = (props: Props) => {\n  const { startHandler } = props;\n  const classes = useStyles();\n\n  return (\n    <>\n      <Typography variant=\"body1\" component=\"div\">\n        <p>This tool helps you understand the way you learn. It is a proven tool\n          developed by Peter Honey and Alan Mumford.</p>\n        <p>Take as long as you need to do the questionnaire. It will probably take you 10-15\n          minutes. The more honest you are, the more accurate your profile will be. Remember\n          that there are no right or wrong answers.</p>\n      </Typography>\n      <Button\n        variant=\"contained\"\n        color=\"primary\"\n        size=\"large\"\n        endIcon={<ArrowForwardIosIcon />}\n        onClick={startHandler}\n        className={classes.button}\n      >\n        Let&apos;s get started\n      </Button>\n    </>\n  );\n}\n\nexport default Introduction;\n","export default [\n\"I have strong beliefs about what is right and wrong, good and bad\",\n\"I often act without considering the possible consequences\",\n\"I tend to solve problems using a step-by-step approach\",\n\"I believe that formal procedures and policies restrict people\",\n\"I have a reputation for saying what I think, simply and directly\",\n\"I often find that actions based on feelings are as sound as those based on careful thought and analysis\",\n\"I like the sort of work where I have time for thorough preparation and implementation\",\n\"I regularly question people about their basic assumptions\",\n\"What matters most is whether something works in practice\",\n\"I actively seek out new experiences\",\n\"When I hear about a new idea or approach I immediately start working out how to apply it in practice\",\n\"I am keen on self discipline such as watching my diet, taking regular exercise, sticking to a fixed routine, etc.\",\n\"I take pride in doing a thorough job\",\n\"I get on best with logical, analytical people and less well with spontaneous, \\\"irrational\\\"\",\n\"I take care over the interpretation of data available to me and avoid jumping to conclusions\",\n\"I like to reach a decision carefully after weighing up many alternatives\",\n\"I'm attracted more to novel, unusual ideas than to practical ones\",\n\"I don't like disorganised things and prefer to fit things into a coherent pattern\",\n\"I accept and stick to laid down procedures and policies so long as I regard them as an efficient way of getting the job done\",\n\"I like to relate my actions to a general principle\",\n\"In discussions I like to get straight to the point\",\n\"I tend to have distant, rather formal relationships with people at work\",\n\"I thrive on the challenge of tackling something new and different\",\n\"I enjoy fun-loving, spontaneous people\",\n\"I pay meticulous attention to detail before coming to a conclusion\",\n\"I find it difficult to produce ideas on impulse\",\n\"I believe in coming to the point immediately\",\n\"I am careful not to jump to conclusions too quickly\",\n\"I prefer to have as many resources of information as possible - the more data to think over the better\",\n\"Flippant people who don't take things seriously enough usually irritate me\",\n\"I listen to other people's points of view before putting my own forward\",\n\"I tend to be open about how I'm feeling\",\n\"In discussions I enjoy watching the manoeuvrings of the other participants\",\n\"I prefer to respond to events on a spontaneous, flexible basis rather than plan things out in advance\",\n\"I tend to be attracted to techniques such as network analysis, flow charts, branching programs, contingency planning, etc.\",\n\"It worries me if I have to rush out a piece of work to meet a tight deadline\",\n\"I tend to judge people's ideas on their practical merits\",\n\"Quiet, thoughtful people tend to make me feel uneasy\",\n\"I often get irritated by people who want to rush things\",\n\"It is more important to enjoy the present moment than to think about the past or future\",\n\"I think that decisions based on a thorough analysis of all the information are sounder than those based on intuition\",\n\"I tend to be a perfectionist\",\n\"In discussions I usually produce lots of spontaneous ideas\",\n\"In meetings I put forward practical realistic ideas\",\n\"More often than not, rules are there to be broken\",\n\"I prefer to stand back from a situation\",\n\"I can often see inconsistencies and weaknesses in other people's arguments\",\n\"On balance I talk more than I listen\",\n\"I can often see better, more practical ways to get things done\",\n\"I think written reports should be short and to the point\",\n\"I believe that rational, logical thinking should win the day\",\n\"I tend to discuss specific things with people rather than engaging in social discussion\",\n\"I like people who approach things realistically rather than theoretically\",\n\"In discussions I get impatient with irrelevancies and digressions\",\n\"If I have a report to write I tend to produce lots of drafts before settling on the final version\",\n\"I am keen to try things out to see if they work in practice\",\n\"I am keen to reach answers via a logical approach\",\n\"I enjoy being the one that talks a lot\",\n\"In discussions I often find I am the realist, keeping people to the point and avoiding wild speculations\",\n\"I like to ponder many alternatives before making up my mind\",\n\"In discussions with people I often find I am the most dispassionate and objective\",\n\"In discussions I'm more likely to adopt a \\\"low profile\\\" than to take the lead and do most of the talking\",\n\"I like to be able to relate current actions to a longer term bigger picture\",\n\"When things go wrong I am happy to shrug it off and \\\"put it down to experience\\\"\",\n\"I tend to reject wild, spontaneous ideas as being impractical\",\n\"It's best to think carefully before taking action\",\n\"On balance I do the listening rather than the talking\",\n\"I tend to be tough on people who find it difficult to adopt a logical approach\",\n\"Most times I believe the end justifies the means\",\n\"I don't mind hurting people's feelings so long as the job gets done\",\n\"I find the formality of having specific objectives and plans stifling\",\n\"I'm usually one of the people who puts life into a party\",\n\"I do whatever is expedient to get the job done\",\n\"I quickly get bored with methodical, detailed work\",\n\"I am keen on exploring the basic assumptions, principles and theories underpinning things and events\",\n\"I'm always interested to find out what people think\",\n\"I like meetings to be run on methodical lines, sticking to laid down agenda, etc.\",\n\"I steer clear of subjective or ambiguous topics\",\n\"I enjoy the drama and excitement of a crisis situation\",\n\"People often find me insensitive to their feelings\",\n]","import React, { useState, useEffect, useRef } from 'react';\n\nimport { makeStyles } from '@material-ui/core/styles';\nimport ArrowBackIcon from '@material-ui/icons/ArrowBack';\nimport Button from \"@material-ui/core/Button\";\nimport Card from '@material-ui/core/Card';\nimport CardActions from '@material-ui/core/CardActions';\nimport CardContent from '@material-ui/core/CardContent';\nimport CheckIcon from '@material-ui/icons/Check';\nimport ClearIcon from '@material-ui/icons/Clear';\nimport Fade from '@material-ui/core/Fade';\nimport IconButton from \"@material-ui/core/IconButton\";\nimport Tooltip from '@material-ui/core/Tooltip';\nimport Typography from '@material-ui/core/Typography';\n\nimport questions from 'data/questions';\n\ntype Props = {\n  currentQuestion: number,\n  saveAnswer: Function,\n  goBack: Function,\n};\n\nconst useStyles = makeStyles((theme) => ({\n  button: {\n    margin: [[theme.spacing(2), theme.spacing(2), 0, 0]],\n  },\n}));\n\nconst Questions = (props: Props) => {\n  const {\n    currentQuestion,\n    saveAnswer,\n    goBack,\n  } = props;\n  const classes = useStyles();\n  const previousQuestionNumber = useRef();\n  const [doFadeIn, setDoFadeIn] = useState(false);\n  const [answer, setAnswer] = useState();\n\n  const saveAnswerAfterTransition = () => {\n    saveAnswer(currentQuestion, answer);\n  }\n\n  const handleAgree = () => {\n    setAnswer(true);\n    setDoFadeIn(false);\n  };\n\n  const handleDisagree = () => {\n    setAnswer(false);\n    setDoFadeIn(false);\n  };\n\n  useEffect(() => {\n    if (currentQuestion !== previousQuestionNumber.current) {\n      previousQuestionNumber.current = currentQuestion;\n      setTimeout(() => {\n        setDoFadeIn(true);\n      }, 100);\n    }\n  }, [currentQuestion]);\n\n  return (\n    <Fade in={doFadeIn} onExited={saveAnswerAfterTransition}>\n      <Card>\n        <CardContent>\n          <Typography variant=\"subtitle2\" component=\"h2\" color=\"textSecondary\" gutterBottom>\n            <Tooltip\n              title={currentQuestion ? `Go back to question ${currentQuestion}` : \"Go back\"}\n              aria-label=\"Go back 1 question\"\n              placement=\"top\"\n              TransitionComponent={Fade}\n            >\n              <IconButton\n                size=\"small\"\n                onClick={goBack}\n              >\n                <ArrowBackIcon />\n              </IconButton>\n            </Tooltip>\n            Question {currentQuestion + 1} of {questions.length}\n          </Typography>\n          <Typography variant=\"h5\" component=\"p\">\n            {questions[currentQuestion]}\n          </Typography>\n        </CardContent>\n        <CardActions>\n          <Button\n            color=\"primary\"\n            size=\"large\"\n            startIcon={<CheckIcon />}\n            onClick={handleAgree}\n            className={classes.button}\n          >\n            Mostly Agree\n          </Button>\n          <Button\n            color=\"primary\"\n            size=\"large\"\n            startIcon={<ClearIcon />}\n            onClick={handleDisagree}\n            className={classes.button}\n          >\n            Mostly Disagree\n          </Button>\n        </CardActions>\n      </Card>\n    </Fade>\n  );\n}\n\nexport default Questions;\n","import React from 'react';\n\nimport { makeStyles, lighten, withTheme } from \"@material-ui/core/styles\";\nimport Fade from \"@material-ui/core/Fade\";\nimport Tooltip from '@material-ui/core/Tooltip';\n\ntype Props = {\n  learningType: Object,\n  score: number,\n  theme: Object,\n};\n\nconst useStyles = makeStyles((theme) => ({\n  chart: {\n    backgroundColor: theme.palette.grey['200'],\n    margin: [[theme.spacing(1), 0]],\n    height: '20px',\n    position: \"relative\",\n  },\n  categoryMarker: {\n    borderRight: `1px solid ${theme.palette.background.paper}`,\n    bottom: 0,\n    left: 0,\n    position: 'absolute',\n    top: 0,\n    zIndex: 20,\n  },\n  scoreBar: {\n    position: 'absolute',\n    left: 0,\n    height: '20px',\n    top: '0',\n  }\n}));\n\nconst ResultsItemsScoreChart = (props: Props) => {\n  const {\n    learningType,\n    score,\n    theme,\n  } = props;\n  const classes = useStyles();\n\n  const renderScoreBarForCategory = (scoreCategory, scoreCategoryIndex) => {\n    let width;\n    const bgColor = lighten(theme.palette.primary.main, (10 - learningType.scoreCategories.length - 1 - scoreCategoryIndex)/10)\n    const zIndex = 10 - scoreCategoryIndex;\n    if (score > scoreCategory.maxScore) {\n      width = (scoreCategory.maxScore)/learningType.questionIndexes.length * 100;\n      return (\n        <div\n          className={classes.scoreBar}\n          style={{ width: `${width}%`, backgroundColor: `${bgColor}`, zIndex }}\n        />\n      )\n    }\n    if (score >= scoreCategory.minScore) {\n      width = score/learningType.questionIndexes.length * 100;\n      return (\n        <div\n          className={classes.scoreBar}\n          style={{ width: `${width}%`, backgroundColor: `${bgColor}`, zIndex }}\n        />\n      )\n    }\n    return null;\n  };\n\n  return (\n    <div className={classes.chart}>\n      { learningType.scoreCategories.map((scoreCategory, scoreCategoryIndex) => {\n        const zIndex = 20 - scoreCategoryIndex;\n        return (\n          <div key={`${learningType.title}_${scoreCategory.name}_bar`}>\n            { renderScoreBarForCategory(scoreCategory, scoreCategoryIndex) }\n            <Tooltip\n              title={`${scoreCategory.name}: ${scoreCategory.minScore} to ${scoreCategory.maxScore}`}\n              placement=\"top-end\"\n              TransitionComponent={Fade}\n            >\n              <div\n                className={classes.categoryMarker}\n                style={{ width: `${(scoreCategory.maxScore)/learningType.questionIndexes.length * 100}%`, zIndex, }}\n              />\n            </Tooltip>\n          </div>\n        );\n      })}\n    </div>\n  );\n}\n\nexport default withTheme(ResultsItemsScoreChart);\n","import React from 'react';\n\nimport useMediaQuery from '@material-ui/core/useMediaQuery';\nimport { makeStyles, useTheme } from \"@material-ui/core/styles\";\nimport Button from \"@material-ui/core/Button\";\nimport CheckIcon from '@material-ui/icons/Check';\nimport ClearIcon from '@material-ui/icons/Clear';\nimport CloseIcon from '@material-ui/icons/Close';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport Divider from \"@material-ui/core/Divider\";\nimport Grid from '@material-ui/core/Grid';\nimport IconButton from \"@material-ui/core/IconButton\";\nimport Typography from '@material-ui/core/Typography';\n\nimport questions from 'data/questions';\n\ntype Props = {\n  isOpen: boolean,\n  closeHandler: Function,\n  learningType: Object,\n  scoreData: Object,\n  scoreLevel: string,\n};\n\nconst useStyles = makeStyles((theme) => ({\n  headerIcon: {\n    flexGrow: 0,\n    flexShrink: 0,\n    height: '32px',\n    margin: [[0, theme.spacing(1), 0, 0]],\n    width: '32px',\n  },\n  headerContent: {\n    display: 'flex',\n  },\n  divider: {\n    margin: [[theme.spacing(2), 0]],\n  },\n  responses: {\n    marginTop: theme.spacing(2),\n  },\n  attributesContainer: {\n    margin: [[theme.spacing(2), 0]],\n  },\n  attributesList: {\n    margin: [[theme.spacing(1), 0]],\n    paddingLeft: theme.spacing(4),\n  }\n}));\n\nconst ResultsItemDetails = (props: Props) => {\n  const {\n    isOpen,\n    closeHandler,\n    learningType,\n    scoreData,\n    scoreLevel,\n  } = props;\n  const classes = useStyles();\n\n  const theme = useTheme();\n  const fullScreen = useMediaQuery(theme.breakpoints.down('sm'));\n\n  return (\n    <Dialog\n      fullScreen={fullScreen}\n      open={isOpen}\n      scroll=\"paper\"\n      aria-labelledby={`dialog-title-${scoreData.learningTypeKey}`}\n    >\n      <DialogTitle id={`dialog-title-${scoreData.learningTypeKey}`}>\n        <div className={classes.headerContent}>\n          <div className={classes.headerIcon}>\n            <IconButton\n              aria-label=\"Go back 1 question\"\n              size=\"small\"\n              onClick={closeHandler}\n            >\n              <CloseIcon />\n            </IconButton>\n          </div>\n          {learningType.title}\n        </div>\n      </DialogTitle>\n      <DialogContent dividers>\n        <DialogContentText component=\"div\">\n          <Typography variant=\"body1\" component=\"p\">\n            {learningType.description}\n          </Typography>\n          <div className={classes.attributesContainer}>\n            <Typography variant=\"body1\" component=\"h3\">\n              <strong>{learningType.title}s learn best when:</strong>\n            </Typography>\n            <ul className={classes.attributesList}>\n              {learningType.learnBestWhen.map((attribute, index) => {\n                const key = `${learningType.title}_learn_best_${index}`;\n                return (\n                  <Typography variant=\"body1\" component=\"li\" key={key}>\n                    {attribute}\n                  </Typography>\n                );\n              })}\n            </ul>\n          </div>\n          <div className={classes.attributesContainer}>\n            <Typography variant=\"body1\" component=\"h3\">\n              <strong>{learningType.title}s learn least when:</strong>\n            </Typography>\n            <ul className={classes.attributesList}>\n              {learningType.learnLeastWhen.map((attribute, index) => {\n                const key = `${learningType.title}_learn_least_${index}`;\n                return (\n                  <Typography variant=\"body1\" component=\"li\" key={key}>\n                    {attribute}\n                  </Typography>\n                );\n              })}\n            </ul>\n          </div>\n          <Divider className={classes.divider} />\n          <Typography variant=\"subtitle1\" component=\"p\">\n            You agreed with {scoreData.score} of the statements corresponding to the {learningType.title} learning style. Your preference for the <strong>{learningType.title}</strong> learning style is <strong>{scoreLevel}</strong> (Based on general norms for 1302 people).\n          </Typography>\n          <Divider className={classes.divider} />\n          <Typography variant=\"subtitle1\" component=\"p\">\n            <strong>These were your responses to the {learningType.title} statements:</strong>\n          </Typography>\n          <div className={classes.responses}>\n            {learningType.questionIndexes.map((questionIndex) => (\n              <Grid container spacing={3} key={`${learningType.title}_question_${questionIndex}`}>\n                <Grid item xs={11}>\n                  {questions[questionIndex]}\n                </Grid>\n                <Grid item xs={1}>\n                  { scoreData.responses[questionIndex] ? <CheckIcon /> : <ClearIcon /> }\n                </Grid>\n              </Grid>\n            ))}\n          </div>\n        </DialogContentText>\n      </DialogContent>\n      <DialogActions>\n        <Button onClick={closeHandler} color=\"primary\" autoFocus>\n          Close\n        </Button>\n      </DialogActions>\n    </Dialog>\n  );\n}\n\nexport default ResultsItemDetails;\n","import React, { useState, useEffect } from 'react';\n\nimport {makeStyles } from \"@material-ui/core/styles\";\nimport Button from \"@material-ui/core/Button\";\nimport Card from '@material-ui/core/Card';\nimport CardActions from '@material-ui/core/CardActions';\nimport CardContent from '@material-ui/core/CardContent';\nimport Typography from '@material-ui/core/Typography';\n\nimport ResultsItemsScoreChart from 'components/ResultsItemScoreChart';\nimport ResultsItemDetails from 'components/ResultsItemDetails';\n\ntype Props = {\n  learningType: Object,\n  scoreData: Object,\n};\n\nconst useStyles = makeStyles((theme) => ({\n  learningTypeCard: {\n    margin: [[theme.spacing(2), 0]],\n  },\n  results: {\n    margin: [[theme.spacing(3), 0, 0]],\n  }\n}));\n\nconst ResultsItem = (props: Props) => {\n  const {\n    learningType,\n    scoreData,\n  } = props;\n\n  const classes = useStyles();\n\n  const [isDetailsOpen, setIsDetailsOpen] = useState(false);\n  const [scoreLevel, setScoreLevel] = useState('');\n\n  const openDetails = () => {\n    setIsDetailsOpen(true);\n  };\n\n  const closeDetails = () => {\n    setIsDetailsOpen(false);\n  };\n\n  useEffect(() => {\n    let scoreCategory = learningType.scoreCategories.find(category => scoreData.score >= category.minScore && scoreData.score <= category.maxScore);\n    if (!scoreCategory) {\n      [scoreCategory] = learningType.scoreCategories;\n    }\n    setScoreLevel(scoreCategory.name);\n  }, [scoreData, learningType]);\n\n  return (\n    <Card className={classes.learningTypeCard}>\n      <CardContent>\n        <Typography variant=\"h5\" component=\"h2\" gutterBottom>\n          {learningType.title}\n        </Typography>\n        <Typography variant=\"body1\" component=\"p\" gutterBottom>\n          {learningType.description}\n        </Typography>\n        <div className={classes.results}>\n          <ResultsItemsScoreChart\n            learningType={learningType}\n            score={scoreData.score}\n          />\n          <Typography variant=\"body1\" component=\"p\">\n            <strong>{scoreLevel}</strong>\n            {` `}\n            ({scoreData.score}/{learningType.questionIndexes.length})\n          </Typography>\n        </div>\n      </CardContent>\n      <CardActions>\n        <Button\n          color=\"primary\"\n          size=\"large\"\n          onClick={openDetails}\n        >\n          Details\n        </Button>\n      </CardActions>\n      <ResultsItemDetails\n        isOpen={isDetailsOpen}\n        closeHandler={closeDetails}\n        scoreData={scoreData}\n        scoreLevel={scoreLevel}\n        learningType={learningType}\n      />\n    </Card>\n  );\n}\n\nexport default ResultsItem;\n","export default {\n  activist: {\n    title: \"Activist\",\n    description: \"Activists are people who learn by doing. They like to involve themselves\\n\" +\n      \"in new experiences, and will \\\"try anything once\\\". They tend to act first and\\n\" +\n      \"consider the consequences afterwards. \",\n    learnBestWhen: [\n      \"involved in new experiences, problems and opportunities\",\n      \"thrown in at the deep end\",\n      \"working with others in problem solving, games, role-playing exercises\",\n      \"able to lead a group.\",\n    ],\n    learnLeastWhen: [\n      \"listening to lectures or reading long explanations\",\n      \"reading, writing and thinking on their own\",\n      \"analysing and interpreting lots of data\",\n      \"following precise instructions\",\n    ],\n    questionIndexes: [1, 3, 5, 9, 16, 22, 23, 31, 33, 37, 39, 42, 44, 47, 57, 63, 70, 71, 73, 78],\n    scoreCategories: [\n      {\n        name: 'Very Low',\n        minScore: 0,\n        maxScore: 3,\n      },\n      {\n        name: 'Low',\n        minScore: 4,\n        maxScore: 6,\n      },\n      {\n        name: 'Moderate',\n        minScore: 7,\n        maxScore: 10,\n      },\n      {\n        name: 'Strong',\n        minScore: 11,\n        maxScore: 12,\n      },\n      {\n        name: 'Very Strong',\n        minScore: 13,\n        maxScore: 20,\n      }\n    ],\n  },\n  reflector: {\n    title: \"Reflector\",\n    description: \"Reflectors learn by observing and thinking about what happened. They like\\n\" +\n      \"to consider all the possible angles and implications before coming to a\\n\" +\n      \"considered opinion. They spend time listening and observing, and tend to\\n\" +\n      \"be cautious and thoughtful. \",\n    learnBestWhen: [\n      \"able to stand back and observe first\",\n      \"given time to think and investigate before commenting or acting\",\n      \"given an opportunity to review what has happened\",\n      \"doing tasks without tight deadlines\",\n    ],\n    learnLeastWhen: [\n      \"forced to take a lead in a group\",\n      \"doing things without preparation\",\n      \"rushed by deadlines\"\n    ],\n    questionIndexes: [6, 12, 14, 15, 24, 27, 28, 30, 32, 35, 38, 40, 45, 51, 54, 59, 61, 65, 66, 75],\n    scoreCategories: [\n      {\n        name: 'Very Low',\n        minScore: 0,\n        maxScore: 8,\n      },\n      {\n        name: 'Low',\n        minScore: 9,\n        maxScore: 11,\n      },\n      {\n        name: 'Moderate',\n        minScore: 12,\n        maxScore: 14,\n      },\n      {\n        name: 'Strong',\n        minScore: 15,\n        maxScore: 17,\n      },\n      {\n        name: 'Very Strong',\n        minScore: 18,\n        maxScore: 20,\n      }\n    ],\n  },\n  theorist: {\n    title: \"Theorist\",\n    description: \"Theorists like to understand the theory behind the actions. They need\\n\" +\n      \"models, concepts and facts in order to learn. They like to analyse and\\n\" +\n      \"synthesise, and feel uncomfortable with subjective judgements.\",\n    learnBestWhen: [\n      \"an activity is backed up by ideas and concepts that form a model, system\\n\" +\n      \"or theory\",\n      \"in a structured situation with a clear purpose\",\n      \"they have the chance to question and probe\",\n      \"required to understand a complex situation\"\n    ],\n    learnLeastWhen: [\n      \"in situations that emphasise emotions and feelings\",\n      \"when activities are unstructured or ambiguous\",\n      \"when asked to act without knowing the principles or concepts involved\",\n    ],\n    questionIndexes: [0, 2, 7, 11, 13, 17, 19, 21, 25, 29, 41, 46, 50, 56, 60, 62, 67, 74, 76, 77],\n    scoreCategories: [\n      {\n        name: 'Very Low',\n        minScore: 0,\n        maxScore: 7,\n      },\n      {\n        name: 'Low',\n        minScore: 8,\n        maxScore: 10,\n      },\n      {\n        name: 'Moderate',\n        minScore: 11,\n        maxScore: 13,\n      },\n      {\n        name: 'Strong',\n        minScore: 14,\n        maxScore: 15,\n      },\n      {\n        name: 'Very Strong',\n        minScore: 16,\n        maxScore: 20,\n      }\n    ],\n  },\n  pragmatist: {\n    title: \"Pragmatist\",\n    description: \"Pragmatists are keen on trying things out. They look for new ideas that can\\n\" +\n      \"be applied to the problem in hand. They like to get on with things and tend \\n\" +\n      \"to be impatient with open-ended discussions; they are practical, down-toearth people.\",\n    learnBestWhen: [\n      \"there is an obvious link between the topic and a current need\",\n      \"they are shown techniques with clear practical advantages\",\n      \"they can try things out with feedback from an expert\",\n      \"they can copy an example, or emulate a role model\",\n    ],\n    learnLeastWhen: [\n      \"there is no immediate practical benefit\",\n      \"there are no clear guidelines on how to do it\",\n      \"it appears to be \\\"all theory\\\"\",\n    ],\n    questionIndexes: [4, 8, 10, 18, 20, 26, 34, 36, 43, 48, 49, 52, 53, 55, 58, 64, 68, 69, 72, 79],\n    scoreCategories: [\n      {\n        name: 'Very Low',\n        minScore: 0,\n        maxScore: 8,\n      },\n      {\n        name: 'Low',\n        minScore: 9,\n        maxScore: 11,\n      },\n      {\n        name: 'Moderate',\n        minScore: 12,\n        maxScore: 14,\n      },\n      {\n        name: 'Strong',\n        minScore: 15,\n        maxScore: 16,\n      },\n      {\n        name: 'Very Strong',\n        minScore: 17,\n        maxScore: 20,\n      }\n    ],\n  },\n}","import React, { useEffect, useState } from 'react';\n\nimport Typography from '@material-ui/core/Typography';\n\nimport ResultsItem from 'components/ResultsItem';\nimport learningTypes from 'data/learningTypes';\n\ntype Props = {\n  answers: Object,\n};\n\nconst Results = (props: Props) => {\n  const {\n    answers,\n  } = props;\n\n  const [scoresByLearningType, setScoresByLearningType] = useState([]);\n\n  useEffect(() => {\n    const categorisedScores = [];\n    Object.keys(learningTypes).forEach((key) => {\n      const scoreForThisLearningType = {\n        learningTypeKey: key,\n        responses: {},\n        score: 0,\n      };\n      learningTypes[key].questionIndexes.forEach((questionIndex) => {\n        const answerForCurrentIndex = answers[questionIndex];\n        scoreForThisLearningType.responses[questionIndex] = answerForCurrentIndex;\n        if (answerForCurrentIndex) {\n          scoreForThisLearningType.score += 1;\n        }\n      });\n      categorisedScores.push(scoreForThisLearningType);\n    });\n\n    setScoresByLearningType(categorisedScores);\n  }, [answers]);\n\n  return (\n    <>\n      <Typography variant=\"subtitle1\" component=\"h2\" gutterBottom>\n        Your learning style profile:\n      </Typography>\n      {scoresByLearningType.map((learningTypeScore) => (\n        <ResultsItem\n          key={learningTypeScore.learningTypeKey}\n          learningType={learningTypes[learningTypeScore.learningTypeKey]}\n          scoreData={learningTypeScore}\n        />\n      ))}\n    </>\n  );\n}\n\nexport default Results;\n","import React, { useState, useRef } from 'react';\n\nimport { makeStyles } from '@material-ui/core/styles';\nimport Container from '@material-ui/core/Container';\n\nimport Introduction from 'components/Introduction';\nimport Questions from 'components/Questions';\nimport Results from 'components/Results';\n\nimport questions from 'data/questions';\n\nconst totalNumberOfQuestions = questions.length;\n\nconst useStyles = makeStyles(() => ({\n  mainContainer: {\n    flexGrow: 1,\n    marginBottom: '60px',\n    marginTop: '100px',\n  },\n}));\n\nfunction AppMain() {\n  const classes = useStyles();\n  const [stage, setStage] = useState('intro');\n  const [currentQuestionNumber, setCurrentQuestionNumber] = useState(0);\n  const answers = useRef({});\n\n  const startQuestionnaire = () => {\n    setStage('questions');\n  };\n\n  const saveAnswer = (questionNumber, answer) => {\n    answers.current[String(questionNumber)] = answer;\n    if (questionNumber + 1 < totalNumberOfQuestions) {\n      setCurrentQuestionNumber(currentQuestionNumber + 1);\n    } else {\n      setStage('results');\n    }\n  };\n\n  const goBackOneQuestion = () => {\n    if (currentQuestionNumber) {\n      setCurrentQuestionNumber(currentQuestionNumber -1);\n    } else {\n      setStage('intro');\n    }\n  };\n\n  return (\n    <Container maxWidth=\"sm\" component=\"main\" className={classes.mainContainer}>\n      {(stage === 'intro') &&\n        <Introduction startHandler={startQuestionnaire} />\n      }\n      {(stage === 'questions') &&\n        <Questions\n          saveAnswer={saveAnswer}\n          currentQuestion={currentQuestionNumber}\n          goBack={goBackOneQuestion}\n        />\n      }\n      {(stage === 'results') &&\n        <Results answers={answers.current} />\n      }\n    </Container>\n  );\n}\n\nexport default AppMain;\n","import React from 'react';\n\nimport { makeStyles } from '@material-ui/core/styles';\nimport AppBar from '@material-ui/core/AppBar';\nimport Link from '@material-ui/core/Link';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\n\nimport AppMain from 'components/AppMain';\n\nconst useStyles = makeStyles((theme) => ({\n  footerContainer: {\n    flexShrink: 0,\n    margin: [[theme.spacing(2), theme.spacing(3)]],\n    textAlign: 'center',\n  }\n}));\n\nfunction App() {\n  const classes = useStyles();\n\n  return (\n    <>\n      <AppBar position=\"fixed\" component=\"header\">\n        <Toolbar>\n          <Typography variant='h6' component='h1'>\n            Find your learning style\n          </Typography>\n        </Toolbar>\n      </AppBar>\n      <AppMain />\n      <Typography variant=\"body2\" component=\"footer\" className={classes.footerContainer}>\n        {`This tool uses `}\n        <Link href=\"https://en.wikipedia.org/wiki/Learning_styles#Peter_Honey_and_Alan_Mumford's_model\" target=\"_blank\" rel=\"noopener noreferrer\" variant=\"body2\">\n          Honey and Mumford&apos;s Learning Styles Questionnaire\n        </Link>\n        . Learning descriptions are taken directly from\n        {` `}\n        <Link href=\"https://www.open.edu/openlearn/ocw/pluginfile.php/629607/mod_resource/content/1/t175_4_3.pdf\" target=\"_blank\" rel=\"noopener noreferrer\" variant=\"body2\">\n          The Open University\n        </Link>\n        . No data will be saved by this tool.\n      </Typography>\n    </>\n  );\n}\n\nexport default App;\n","/* eslint-disable */\n\n// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from 'components/App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}